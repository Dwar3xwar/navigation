// Type definitions for NavigationReactMobile 1.0
// Project: http://grahammendick.github.io/navigation/
// Definitions by: Graham Mendick <https://github.com/grahammendick>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

import { StateNavigator, State, HTML5HistoryManager } from 'navigation';
import { Component, ReactElement } from 'react';

declare module 'navigation' {
    export interface State {
        /**
         * Renders a Scene for this State
         */
        renderScene: (state: State, data: any) => ReactElement<any>;
    }
}

/**
 * Defines the Shared Element Props contract
 */
export interface SharedElementProps {
    name: string;
    data?: any;
    unshare?: boolean;
    stateNavigator?: StateNavigator;
    children: ReactElement<any>;
}

/**
 * Holds Shared Elements and their data
 */
export interface SharedItem {
    name: string;
    oldElement: {ref: HTMLElement; data: any};
    mountedElement: {ref: HTMLElement; data: any};
}

/**
 * Defines the Shared Element Navigation Motion Props contract
 */
export interface SharedElementNavigationMotionProps {
    sharedElements: SharedItem[];
    progress: number;
    duration: number;
}

/**
 * Defines the Shared Element Motion Props contract
 */
export interface SharedElementMotionProps {
    onAnimated?: (name: string, ref: HTMLElement, data: any) => void;
    onAnimating?: (name: string, ref: HTMLElement, data: any) => void;
    elementStyle?: (name: string, ref: HTMLElement, data: any) => any;
    children: (style: any, name: string, oldElementData: any, mountedElementData: any) => ReactElement<any>;
}

/**
 * Defines the Navigation Motion Props contract
 */
export interface NavigationMotionProps {
    unmountedStyle?: any;
    mountedStyle?: any;
    crumbStyle?: any;
    duration?: number;
    sharedElementMotion?: (props: SharedElementNavigationMotionProps) => ReactElement<SharedElementMotion>;
    stateNavigator?: StateNavigator;
    children: (style: any, scene: ReactElement<any>, key: number, active: boolean, state: State, data: any) => ReactElement<any>;
}

/**
 * Identifies HTML Elements that can be shared when navigating
 */
export class SharedElement extends Component<SharedElementProps> { }

/**
 * Animates Shared Elements when navigating
 */
export class SharedElementMotion extends Component<SharedElementNavigationMotionProps & SharedElementMotionProps> { }

/**
 * Animates Scenes when navigating
 */
export class NavigationMotion extends Component<NavigationMotionProps> { }

/**
 * Manages history with the HTML5 history api. Produces friendly Urls in Mobile
 * web apps. If the applicationPath is undefined it uses the browser's Url hash
 */
export class MobileHistoryManager extends HTML5HistoryManager {
    /**
     * Initializes a new instance of the MobileHistoryManager class
     * @param buildCurrentUrl The function that adds an initial crumb trail to
     * a friendly Url
     * @param applicationPath The application path
     */
    constructor(buildCurrentUrl: (url: string) => string, applicationPath?: string);
    /**
     * Gets a friendly Href from a Url
     */
    getHref(url: string): string;
    /**
     * Gets a Url from the anchor or location
     */
    getUrl(hrefElement: HTMLAnchorElement | Location): string;
    /**
     * Gets the current location
     */
    getCurrentUrl(): string;
}
